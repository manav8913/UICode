Word,Count
*,193
,91
=,54
Created:,48
Author:,48
Geekay,45
1/6/2014,36
AM,35
DD_RESET_VALVE,23
into,16
duty,16
count,16
convert,16
DD_SET_VALVE,15
PUMP,15
PM,13
MOTOR,12
extern,12
DC,12
channel,11
uint8_t,10
page,9
void,9
(VALVE_ID2);,8
1,7
0);,7
2,7
is,7
UF,6
TC_CMR_WAVE|TC_CMR_WAVSEL_UP_RC,6
{,6
to,6
get,6
|TC_CMR_TCCLKS_TIMER_CLOCK4;,6
HEPARIN,5
by,5
},5
BLOOD,5
1sec,5
DD_SET_VALVE(VALVE_ID1);,5
1/16/2014,5
the,5
The,5
DD_ADC.c,4
(VALVE_ID15);,4
(VALVE_ID13);,4
DD_ADC_H_,4
0x00000500;,4
(VALVE_ID14);,4
DD_ADC.h,4
adc_chnl,4
DD_SET_PUMP(DCMOTOR2);,4
peripheral,4
delay_ms(100);,4
1/13/2014,4
pin,4
10:42:26,4
(VALVE_ID16);,4
(VALVE_ID3);,4
controlled,4
(VALVE_ID4);,4
(VALVE_ID18);,4
10:43:38,4
DD_SET_PUMP(DCMOTOR1);,4
uint16_t,4
\printf("\i\,3
&,3
handler,3
!=,3
m,3
if,3
in,3
(mlk/128*interrupt,3
|,3
pump,3
0;,3
\printf("\inside\,3
delay_ms(1000);,3
delay,3
intel,3
ul_rc,3
counts,3
uint32_t,3
frequency)-1,3
const,3
Sensor,3
\channel,\,3
Flash,3
return,3
number,3
(ul_rc,2
\printf("\-F-\,2
Current,2
\*p_uart,\,2
nothing,2
\IFLASH_PAGE_SIZE,\,2
\CHANNEL_NUMBER,uint32_t\,2
Clamp,2
channel_0;,2
holder,2
pwm_chnl,2
\flash_write(ul_last_page_addr,\,2
Lock,2
testing,2
\%lu\n\r"\,\,2
value,2
PWM->PWM_CH_NUM[6].PWM_CPRD,2
1/7/2014,2
BP,2
(VALVE_ID19);,2
sv_sensor,2
\tc6\n"\);\,2
speed/2;,2
TC_IMR_CPCS;,2
\ul_page_buffer,\,2
dty_val,2
commented,2
channel_number),2
programming,2
(UL)ul_rc);,2
PWM->PWM_CH_NUM[0].PWM_CDTY,2
||,2
do,2
Heparin,2
PWM->PWM_CH_NUM[CHANNEL_NUMBER].PWM_CPRD,2
DD_READ_ADC(,2
address,2
Validate,2
Direction,2
Venous,2
Unlock,2
command,2
//,2
Internal,2
100;,2
sv_console_receivedbyte(uint8_t,2
Pump,2
cl_console_receivedbyte(uint8_t);,2
error,2
for,2
FLASH_RC_OK),2
NVIC_ClearPendingIRQ(TC8_IRQn);,1
ABD,1
\printf("\D1"\);\,1
NVIC_DisableIRQ(TC1_IRQn);,1
DD_UART.h,1
0x00E00054;,1
NVIC_ClearPendingIRQ(TC1_IRQn);,1
an,1
DD_SYS.c,1
\NVIC_SetPriority(TC4_IRQn,\,1
\NVIC_SetPriority(TC7_IRQn,\,1
.ul_chmode,1
10:51:21,1
11:43:21,1
sense1,1
////,1
flow,1
\115200,\,1
DD_INIT_NVM(void);,1
SV_ALARM.h,1
PWM->PWM_CH_NUM[CHANNEL_NUMBER].PWM_CDTYUPD,1
channel_12;,1
size,1
rc);,1
dty_val);,1
\printf("\B1"\);\,1
channel_4;,1
\SAM4E,\,1
NVIC_EnableIRQ(TC3_IRQn);,1
TC2->TC_CHANNEL[0].TC_IMR,1
SV_TIMER.h,1
11:42:37,1
timer_no,1
SAM4S,1
IRQn_Type,1
10:33:07,1
associated,1
read=,1
TC_CMR_WAVSEL_UP_RC,1
PWM->PWM_CH_NUM[2].PWM_CDTY,1
<<,1
operation,1
10:39:35,1
TC1->TC_CHANNEL[0].TC_IDR,1
sv,1
read,1
//value,1
sam_uart_opt_t,1
uf,1
\DD_SET_PRDY(pwm_ch_no,prd_val);\,1
SV_STATUS_H_,1
SV_CNTRL.c,1
read);,1
channel_11;,1
DD_SET_DUTY(const,1
\uart_init(UART,&uart_options);\,1
SV_CONSOLE_H_,1
0x000000C8;,1
DD_CONSOLE_RX();,1
\printf("\%d"\,pio);\,1
10:40:53,1
sv_consoleRxdatabyte);,1
DD_UART_H_,1
locked,1
channel_3;,1
NVIC_DisableIRQ(TC3_IRQn);,1
6:21:44,1
10HZ,1
\0x00,\,1
DD_INIT_TIMER(void);,1
PWM->PWM_CH_NUM[4].PWM_CPRD,1
5sec,1
SV_TIMER.c,1
NVIC_DisableIRQ(TC5_IRQn);,1
SV_NVRAM.c,1
sv_console_bytedatawrite(Uart,1
DD_INIT_UART(void);,1
0,1
.ul_mck,1
TC1->TC_CHANNEL[2].TC_CMR,1
(ul_idx,1
10:37:55,1
write,1
D,1
(1<<channel_number)),1
NVIC_EnableIRQ(TC6_IRQn);,1
DD_GPIO_H_,1
channel_1;,1
\tc_start(TC2,\,1
DD_DRIVER.c,1
SV_INTERFACE_H_,1
requried,1
DD_GPIO.c,1
SV_SYS.c,1
PWM->PWM_CH_NUM[2].PWM_CPRD,1
DD_SYS_H_,1
prd_val);,1
any,1
DD_NVM.c,1
.ul_baudrate,1
PWM->PWM_CH_NUM[4].PWM_CDTY,1
DD_INIT_INT(void);,1
\printf("\%d"\,sensor_struct1.DGPcurrentstatus);\,1
\NVIC_SetPriority(TC8_IRQn,\,1
SV_STATUS.h,1
SV_SENSOR_NULL;,1
SV_SENSOR_ID1;,1
NVIC_ClearPendingIRQ(TC7_IRQn);,1
sv_consoleTxdatabyte);,1
GPIO,1
6:22:09,1
NVIC_ClearPendingIRQ(TC2_IRQn);,1
rc,1
5:57:40,1
VALVE,1
Flow,1
\*tc,\,1
BD,1
erase,1
Set,1
2;,1
\NVIC_SetPriority(TC2_IRQn,\,1
10:44:55,1
flash_erase_sector(ul_last_page_addr);,1
DD_INIT_PWM(void);,1
TC_IDR_COVFS|TC_IDR_CPAS|TC_IDR_ETRGS|TC_IDR_LDRAS|TC_IDR_CPBS|TC_IDR_LDRBS|TC_IDR_LOVRS;,1
5:58:06,1
DD_DRIVER.h,1
15),1
SV_NVRAM_H_,1
#if,1
selecting,1
10:35:41,1
#endif,1
OF,1
DD_INIT_CLOCK(void);,1
SV_ALARM.c,1
DD_TIMER_H_,1
Last,1
==,1
DD_TIMER.h,1
12:00:08,1
uart_options,1
\printf("\A1"\);\,1
DD_INT.h,1
DD_GPIO.h,1
channel_6;,1
};,1
bit,1
SV_STATUS.c,1
10:32:46,1
32);,1
rc=656249;,1
10:38:15,1
NVIC_ClearPendingIRQ(TC4_IRQn);,1
SV_PUMP_ID6,1
DD_READ_ADC(const,1
4:28:45,1
TC2->TC_CHANNEL[0].TC_IDR,1
Level,1
4:29:05,1
PWM->PWM_CH_NUM[6].PWM_CDTY,1
\DD_SET_PIO(peri,p_io);\,1
security,1
FREQUENCY,1
Check,1
11:44:13,1
DD_INIT_ADC(void);,1
11:10:21,1
raise,1
DD_UART.c,1
TC1->TC_CHANNEL[1].TC_CMR,1
timer_res,1
OPEN,1
EWP,1
1/8/2014,1
10:50:52,1
\tc_init(tc,\,1
DD_CLOCK.h,1
if(pio,1
TIMER2,1
DD_INTERRUPT.h,1
2:06:57,1
\printf("\A0"\);\,1
DUTY;,1
DD_PWM.c,1
0x800;,1
(SAM4S,1
*/,1
channel);,1
10:40:34,1
TC2->TC_CHANNEL[1].TC_CMR,1
%,1
\tc3\n"\);\,1
NVIC_DisableIRQ(TC7_IRQn);,1
\printf("\C0"\);\,1
start,1
\printf("\c"\);\,1
DD_INIT_PIO(void);,1
(1<<channel_number));,1
\start"\);\,1
PWM_CMR_CPOL|PWM_CMR_CPRE_MCK_DIV_32|PWM_CMR_CES|PWM_CMR_DTE|PWM_CMR_DTHI|PWM_CMR_DTLI;,1
10:35:04,1
#else,1
6,1
10:34:41,1
SV_CNTRL.h,1
TC1->TC_CHANNEL[0].TC_IMR,1
and,1
SV_SYS_H_,1
DD_PWM_H_,1
DD_INTERRUPT.c,1
flash,1
NVIC_ClearPendingIRQ(TC3_IRQn);,1
2:07:23,1
.c,1
1;,1
\SAM4N,\,1
PWM->PWM_CH_NUM[0].PWM_CPRD,1
DD_INT_H_,1
B,1
\printf("\%d"\,ret_val);\,1
pmc_enable_periph_clk(ID_TC6);,1
TC0->TC_CHANNEL[1].TC_CMR,1
0xef;,1
DD_NVM_H_,1
SV_CONSOLE.h,1
\printf("\B0"\);\,1
sv_interface.h,1
SV_ALARM_H_,1
not,1
sv_consoleRxdatabyte,1
C,1
sense,1
12:03:24,1
before,1
DD_DRIVER_H_,1
11:10:42,1
SV_CNTRL_H_,1
6:20:56,1
\timer"\);\,1
0x01),1
region,1
DG,1
DD_CLOCK_H_,1
Write,1
Support,1
SV_TIMER_H_,1
PWM->PWM_CH_NUM[4].PWM_CMR,1
sv_sensortype,1
pio),1
\tc0\n"\);\,1
DD_TOP_TIMER(Tc,1
0x00,1
NORMALLY,1
0x10;//0x00,1
((ADC->ADC_ISR,1
levelswitch2;,1
10:39:51,1
PIOC->PIO_ODSR;,1
2:46:04,1
SV_SYSTEM_INIT(void);,1
TC2->TC_CHANNEL[2].TC_CMR,1
PIOC->PIO_PDSR;,1
sv_consoleTxdatabyte),1
10:36:50,1
10:45:11,1
SAM4E,1
alarm,1
lvl,1
ADC_data;,1
channel_2;,1
DD_PWM.h,1
rx_char);,1
0x0000007D;,1
channel_number);,1
\uart_read(UART,\,1
supported,1
1);,1
DD_CONSOLE_TX(Uart,1
FOR,1
10:46:00,1
\printf("\1"\);\,1
SV_CONSOLE.c,1
DD_HANDLER.c,1
SAM4N),1
PERIOD_VALUE;,1
TC0->TC_CHANNEL[2].TC_CMR,1
DD_HANDLER_H_,1
A,1
10:37:04,1
0x00000850;,1
sv_consoleRxdatabyte;,1
10:46:15,1
channel_5;,1
DD_TIMER.c,1
MEANS,1
NVIC_DisableIRQ(TC4_IRQn);,1
DD_INT.c,1
DD_NVM.h,1
if(status,1
\tc_write_rc(TC2,\,1
channel_7;,1
DD_HANDLER.h,1
DD_INTERRUPT_H_,1
\NVIC_SetPriority(TC1_IRQn,\,1
DD_SET_PRDY(const,1
SV_NVRAM.h,1
so,1
0x00000250;,1
Degaussing,1
sensor,1
TC_CMR_WAVE,1
SV_SYS.h,1
\printf("\C1"\);\,1
6:21:12,1
usv_consoleRxdatabyte);,1
/*,1
DD_SYS.h,1
\printf("\D0"\);\,1
|TC_CMR_TCCLKS_TIMER_CLOCK4);,1
PIOC->PIO_ABSR,1
10:41:42,1
10:41:29,1
\NVIC_SetPriority(TC5_IRQn,\,1
84000000,1
DD_CLOCK.c,1
NVIC_DisableIRQ(TC8_IRQn);,1
NVIC_ClearPendingIRQ(TC5_IRQn);,1
irq);,1
BLD,1
\DD_SET_PRDY(CH_0,prd_val);\,1
NVIC_DisableIRQ(TC2_IRQn);,1
cl_stub.c,1
CFile1.c,1
base,1
100ms,1
0x00001000;,1
10:35:59,1
//TC_IDR_COVFS|TC_IDR_CPAS|TC_IDR_ETRGS|TC_IDR_LDRAS|TC_IDR_CPBS|TC_IDR_LDRBS|TC_IDR_LOVRS;,1
0x00000210;,1
CLOCKA,1
\DD_SET_DUTY(CH_1,dty_val);\,1
\printf("\%d"\,\,1
while,1
if(read,1
\prd_val=1000,dty_val\,1
