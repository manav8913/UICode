/*
 *cl_rinse_controller.h
 *
 * Created: 12/27/2013 12:20:16 PM
 *  Author: user
 */ 


#ifndef CL_RINSE_CONTROLLER_H_
#define CL_RINSE_CONTROLLER_H_

#include "cl_app/cl_alarms/inc/cl_alarmdetector.h"

#define CL_ALARM_TRIGGERED 1
#define CL_ALARM_CLEARED 0

typedef enum
{
	EVENT_NULL,
	EVENT_START_RINSE,
	EVENT_START_RINSE_INT,
	EVENT_START_PRE_DISINF_RINSE,
	EVENT_START_POST_DISINF_RINSE,
	EVENT_STOP_RINSE,
	EVENT_RINSE_TIMEOUT,
	EVENT_RINSE_OPENFILL_TIMEOUT,
	EVENT_RINSE_V2OPEN_TIMEOUT,
	EVENT_RINSE_BO1_V4_TIMEOUT,
	EVENT_RINSE_BO2_V4_TIMEOUT,
	EVENT_RINSE_BO1_V13V14_TIMEOUT,
	EVENT_RINSE_BO2_V13V14_TIMEOUT,
	EVENT_RINSE_DIALYSIS_PREP,
	EVENT_RINSE_TICK_50MS,
	EVENT_RINSE_TICK_100MS,
	EVENT_RINSE_TICK_500MS,
	EVENT_RINSE_TICK_SECOND,
	EVENT_RINSE_TICK_MINUTE,
	EVENT_RINSE_TICK_HOUR,
	EVENT_RINSE_ALERT,
	EVENT_RINSE_ALARM,
	EVT_RINSE_GET_DATA,
	EVT_RINSE_SET_DATA,
	EVENT_MAC_RINSE_COMPLETED,
	EVT_RINSE_START_PRIME,
	EVT_RINSE_STOP_PRIME,
	EVENT_RINSE_SET_BLDPMP_ON,
	EVENT_RINSE_SET_BLDPMP_OFF,
	EVENT_RINSE_SET_BLDPUMPRATE,
	EVT_RINSE_RCIRC_START,
	EVT_RINSE_RCIRC_STOP,
	EVT_RINSE_COMMAND_SET_BLDPMP_ON,
	EVT_RINSE_COMMAND_SET_BLDPMP_OFF,
	EVT_RINSE_COMMAND_SET_BLDPUMPRATE,
	EVENT_RINSE_BC_OPENFILL_COMPLETED,
	EVENT_RINSE_MAXEVENT
	}Cl_Rinse_Eevents;
	
typedef enum
{
	CL_RINSE_STATE_IDLE,
	CL_RINSE_STATE_INIT,
	CL_RINSE_STATE_RINSE_PREPARATION,
	CL_RINSE_STATE_RINSING,
	CL_RINSE_STATE_PRE_DISINFECT_RINSING,
	CL_RINSE_STATE_POST_DISINFECT_RINSING,
	CL_RINSE_STATE_CRITICAL_ALARM,
	CL_RINSE_STATE_PAUSED,
	CL_RINSE_STATE_STOPPED,
	CL_RINSE_STATE_POST_RINSE_STANDBY,
	CL_RINSE_STATE_MAXSTATE
} Cl_Rinse_States;

typedef enum
{
	CL_RINSE_RINSING_IDLE,
	CL_RINSE_RINSING_OPENFILL,
	CL_RINSE_RINSING_BC_SWITCHING,
	CL_RINSE_RINSING_MAX_STATE
	
	
	
}Cl_Rinsing_SubStates;
typedef enum
{
	CL_RINSE_STATE_OPENFILL_IDLE,
	CL_RINSE_STATE_OPENFILL_FILL_USED,
	CL_RINSE_STATE_OPENFILL_FLUSHOUT_BC1U_TO_BC2U,
	CL_RINSE_STATE_OPENFILL_FLUSHOUT_BC2U_TO_BC1U,
	CL_RINSE_STATE_OPENZFILL_MAXSTATE
} Cl_Rinse_OpenFillSubStates;


typedef struct 
{
	
	Cl_NewAlarmIdType Cl_RinseAlarmId;
	Cl_AlarmType Cl_RinseAlarmType;
	bool IsActive;
	bool IsRaised;
	bool userclear;
	bool critical;
	bool Mute;
	
}RinseAlarmsType;

typedef enum {
	
	CL_RINSE_ALARM_BLOODDOOR_STATUS_OPEN,
	//CL_RINSE_ALARM_BYPASSDOOR_STATUS_OPEN,
	CL_RINSE_ALARM_ACID_IN,
	CL_RINSE_ALARM_BICARB_IN,
	CL_RINSE_ALARM_LEVELSWITCH_OFF_TO_ON,
	CL_RINSE_ALARM_LEVELSWITCH_ON_TO_OFF,
	CL_RINSE_ALARM_HOLDER1STATUS_OPEN,
	CL_RINSE_ALARM_HOLDER2STATUS_OPEN,
	CL_RINSE_ALARM_TEMP1_LOW_THRESHOLD,
	CL_RINSE_ALARM_TEMP1_HIGH_THRESHOLD,
	CL_RINSE_ALARM_TEMP2_LOW_THRESHOLD,
	CL_RINSE_ALARM_TEMP2_HIGH_THRESHOLD,
	CL_RINSE_ALARM_TEMP3_LOW_THRESHOLD,
	CL_RINSE_ALARM_TEMP3_HIGH_THRESHOLD,
	CL_RINSE_ALARM_PS1_HIGH_THRESHOLD,
	CL_RINSE_ALARM_PS1_LOW_THRESHOLD,
	CL_RINSE_ALARM_PS2_HIGH_THRESHOLD,
	CL_RINSE_ALARM_PS2_LOW_THRESHOLD,
	CL_RINSE_ALARM_PS3_HIGH_THRESHOLD,
	CL_RINSE_ALARM_PS3_LOW_THRESHOLD,
	//CL_RINSE_ALARM_COND_STATUS_LOW,
	CL_RINSE_ALARM_COND_STATUS_HIGH,
	//CL_RINSE_ALARM_COND_DAC_OPEN,
	//CL_RINSE_ALARM_COND_DAC_RO,
	//CL_RINSE_ALARM_COND_DAC_HIGH,
	CL_RINSE_ALARM_FLOW_NO_FLOW,
	CL_RINSE_ALARM_FLOW_LOW_FLOWRATE,
	CL_RINSE_ALARM_FLOW_HIGH_FLOWRATE,
	//CL_RINSE_ALARM_LEVEL_SWITCH_LOW_TOGGLERATE,
	

	
	CL_RINSE_ALRM_MAX
	
	} ClRinseAlarmIdType;
	


typedef enum {
	

	CL_RINSE_ALARM_STATE_INACTIVE,
	CL_RINSE_ALARM_STATE_ACTIVE,
	CL_RINSE_ALARM_STATE_MUTE,
	CL_RINSE_ALRM_STATE_MAX
	
} ClRinseAlarmStateType;
#define CL_RINSE_OPENFILL_FIRSTHALF_TIMEOUT 1
#define CL_RINSE_OPENFILL_TIMEOUT 4
#define CL_RINSE_OPENFILL_NEWDIALYIS_FLL_TIMEOUT_SEC 9

#define CL_RINSE_STATE_V2OPEN_TIMEOUT 1

#define CL_RINSE_STATE_V15OPEN_TIMEOUT 1

#define CL_RINSE_PATH_BO1_V4_TIMEOUT 1

#define CL_RINSE_PATH_BO2_V4_TIMEOUT 1

#define CL_RINSE_PATH_BO1_V13V14_TIMEOUT 1

#define CL_RINSE_PATH_BO2_V13V14_TIMEOUT 1

#define CL_RINSE_TIMEOUT_MIN 6
#define CL_RINSE_TIMEOUT_HRS 0
#define CL_RINSE_DURATION 6
//prototype definitions of local functions
Cl_ReturnCodes Cl_Rinse_Controller(MAC_EVENTS );


#endif /* CL_RINSE_CONTROLLER_H_ */
